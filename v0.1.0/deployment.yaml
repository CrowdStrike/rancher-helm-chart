apiVersion: apps/v1
kind: DaemonSet
metadata:
    name: falcon-sensor

spec:
    selector:
        matchLabels:
            name: falcon-sensor
    
    template:
        metadata:
            labels:
                name: falcon-sensor
    
    spec:
        initContainers:
            # This init container creates empty falconstore file so that when
            # it's mounted into the falcon-sensor container, kubernetes would
            # just use it rather than creating a directory. Mounting falconstore
            # file as a file volume ensures that CrowdStrike's AID is preserved
            # across container restarts.
            - name: init-falconstore
              image: busybox
              args: [/bin/sh, -c, 'touch /tmp/CrowdStrike/falconstore']
              volumeMounts:
                - name: falconstore-dir
                  mountPath: /tmp/CrowdStrike
        
        containers:
            - name: sensor-container
              image: path.to.svc/yourImage
              volumeMounts:
                - name: dev
                  mountPath: /dev
                - name: var-run
                  mountPath: /var/run
                - name: etc
                  mountPath: /etc
                - name: var-log
                  mountPath: /var/log
                - name: falconstore
                  mountPath: /opt/CrowdStrike/falconstore
                
                securityContext:
                  privileged: true
                  readOnlyRootFilesystem: true
                  allowPrivilegeEscalation: false
                  
                envFrom:
                  - configMapRef:
                      name: falconctl-options
                
                # This splits out logs from sensor-container to stdout
                # so that they are routed through the kubernetes
                # log driver.
                - name: log
                  image: busybox
                  args: [/bin/sh, -c, 'tail -n1 -f /var/log/falcon-sensor.log']
                  volumeMounts:
                    - name: var-log
                      mountPath: /var/log
                      
                      volumes:
                        - name: dev
                          hostPath:
                            path: /dev
                        - name: etc
                          hostPath:
                            path: /etc
                        - name: var-run
                          hostPath:
                            path: /var/run
                        - name: var-log
                          emptyDir: {}
                        - name: falconstore
                          hostPath:
                            path: /tmp/CrowdStrike/falconstore
                        - name: falconstore-dir
                          hostPath:
                            path: /tmp/CrowdStrike

    terminationGradePeriodSeconds: 10
    hostNetwork: true
    hostPID: true
    hostIPC: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: falconctl-options
  namespace: default

data:
  FALCONCTL_OPT_CID: {{ .values.FALCONCTL_OPT_CID | quote }}
  FALCONCTL_OPT_AID: {{ .values.FALCONCTL_OPT_AID | quote }}
  FALCONCTL_OPT_APD: {{ .values.FALCONCTL_OPT_APD | quote }}
  FALCONCTL_OPT_APH: {{ .values.FALCONCTL_OPT_APH | quote }}
  FALCONCTL_OPT_APP: {{ .values.FALCONCTL_OPT_APP | quote }}
  FALCONCTL_OPT_TRACE: {{ .values.FALCONCTL_OPT_TRACE | quote }}
  FALCONCTL_OPT_FEATURE: {{ .values.FALCONCTL_OPT_FEATURE | quote }}
  FALCONCTL_OPT_MESSAGE_LOG: {{ .values.FALCONCTL_OPT_MESSAGE_LOG | quote }}
  FALCONCTL_OPT_BILLING: {{ .values.FALCONCTL_OPT_BILLING | quote }}
  FALCONCTL_OPT_ASSERT: {{ .values.FALCONCTL_OPT_ASSERT }}
  FALCONCTL_OPT_MEMFAIL_GRACE_PERIOD: {{ .values.FALCONCTL_OPT_MEMFAIL_GRACE_PERIOD | quote }}
  FALCONCTL_OPT_MEMFAIL_EVERY_N: {{ .values.FALCONCTL_OPT_MEMFAIL_EVERY_N | quote }}